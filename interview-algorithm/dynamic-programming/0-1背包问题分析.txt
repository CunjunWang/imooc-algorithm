描述：有一个背包，容量为Capacity(C)。现在有n种不同的物品，编号为0...n-1，
其中每一件物品的重量为w(i)，价值为v(i)。问可以向这个背包中放入哪些物品，使得
在不超过背包容量的基础上，物品的总价值最大。

暴力解法：每个物品可以放进背包也可以不放进背包。
共有2^n种组合，时间复杂度为O((2^n)*n)

贪心算法？优先放入平均价值最高的物品？
反例:
id      0    1    2
weight  1    2    3
value   6   10   12
v/w     6    5    4
Capacity = 5

状态定义：
F(n, C) = 考虑将n个物品放进容量为C的背包, 使得价值最大
状态转移方程：
F(i, C) = max{ F(i-1, c), v(i) + F(i-1, c-w(i)) }
第一种策略: 第i个物品根本不需要放入
第二种策略: 第i个物品需要放入

第i行的元素只依赖于第i-1行的元素, 理论上只需要保持两行元素
空间复杂度 O(2*C) = O(C)